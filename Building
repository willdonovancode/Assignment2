public class Building {
     Tenant[] apartments;
    private static double balance=0;
    private static int nextId=1;
    private int id;

    public Building(int size) {
        apartments = new Tenant[size];
        id = nextId;
        nextId++;
    }

    public int getId(){
        return id;
    }
    public static double getBalance(){
        return balance;
    }
    public int countTenants(){
//        return apartments.length;
        int count=0;
        for (Tenant apartment : apartments) {
            if (apartment != null) {
                count++;
            }
        }
        return count;
    }
   public boolean addTenant(Tenant tenant,int aptNum){
        if (aptNum<0 || aptNum>apartments.length){
            return false;
        }
        if (apartments[aptNum]!=null){
            return false;
        }
        apartments[aptNum] = tenant;
        return true;
   }
   public boolean removeTenant(int aptNum){
        if (aptNum<0 || aptNum>apartments.length){
            return false;
        }
        if(apartments[aptNum]!=null){
            apartments[aptNum] = null;
            //already empty silly
            return true;
        }
        return false;
   }
   public String listTenants(){
        StringBuilder tens= new StringBuilder();
        for(int i=0; i<apartments.length; i++){
            if(apartments[i]!=null){
                tens.append("Apartment ").append(apartments[i]).append(apartments[i].name).append(" \n");
            }
        }
        return tens.toString();
   }
   public Tenant getTenant(int aptNum){
        if(aptNum<0 || aptNum>apartments.length){
            return null;
        }
       return apartments[aptNum];
   }
   public static void collectRent(Tenant tenant){
        balance+=tenant.rent;
   }
   public void payForService(double amount){
        balance-=amount;
   }

}
